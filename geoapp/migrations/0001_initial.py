# Generated by Django 4.1.7 on 2024-01-13 12:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='access_control',
            fields=[
                ('access_id', models.AutoField(db_column='access_id', db_index=True, primary_key=True, serialize=False)),
                ('access_name', models.TextField(blank=True, db_column='access_name', null=True)),
                ('access_description', models.TextField(blank=True, db_column='access_description', null=True)),
            ],
            options={
                'db_table': 'access_control',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='authorization_roles',
            fields=[
                ('role_id', models.AutoField(db_column='role_id', primary_key=True, serialize=False)),
                ('role_name', models.TextField(blank=True, db_column='role_name', null=True)),
                ('roles_decription', models.TextField(blank=True, db_column='roles_decription', null=True)),
                ('resource_id', models.IntegerField(db_column='resource_id')),
                ('created_on', models.DateTimeField(db_column='created_on', default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(db_column='modified_on', default=django.utils.timezone.now)),
                ('access_id', models.ForeignKey(db_column='access_id', on_delete=django.db.models.deletion.CASCADE, to='geoapp.access_control')),
            ],
            options={
                'db_table': 'authorization_roles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='file_types',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField(default='Undefined')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_enabled', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'file_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='geo_locations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('foglio', models.TextField(blank=True, null=True)),
                ('p4', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'geo_locations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='module_group',
            fields=[
                ('module_group_id', models.AutoField(db_column='module_group_id', db_index=True, primary_key=True, serialize=False)),
                ('module_group_name', models.TextField(blank=True, db_column='module_group_name', db_index=True, null=True)),
                ('module_description', models.TextField(blank=True, db_column='module_description', db_index=True, null=True)),
                ('is_role_created', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'module_group',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='modules',
            fields=[
                ('module_id', models.AutoField(db_column='module_id', db_index=True, primary_key=True, serialize=False)),
                ('module_name', models.TextField(blank=True, db_column='module_name', db_index=True, null=True)),
                ('module_tag', models.IntegerField(blank=True, db_column='module_tag', db_index=True, null=True)),
                ('is_role_created', models.BooleanField(default=False)),
                ('parent_tag', models.IntegerField(blank=True, db_column='parent_tag', db_index=True, null=True)),
            ],
            options={
                'db_table': 'modules',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='note_types',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField(default='Undefined')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_disabled', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'note_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='resources_type',
            fields=[
                ('resource_type_id', models.AutoField(db_column='resources_type_id', db_index=True, primary_key=True, serialize=False)),
                ('resource_type_name', models.TextField(blank=True, db_column='resources_type_name', db_index=True, null=True)),
                ('table_name', models.TextField(blank=True, db_column='table_name', db_index=True, null=True)),
            ],
            options={
                'db_table': 'resources_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='task_types',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField(default='Undefined')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_disabled', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'task_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='user_group',
            fields=[
                ('user_group_id', models.AutoField(db_index=True, primary_key=True, serialize=False)),
                ('user_group_name', models.TextField(db_index=True)),
                ('user_group_description', models.TextField(blank=True, db_index=True, null=True)),
            ],
            options={
                'db_table': 'user_group',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='user_roles_map',
            fields=[
                ('map_id', models.AutoField(db_column='map_id', db_index=True, primary_key=True, serialize=False)),
                ('user', models.ForeignKey(db_column='user_id', default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_role', models.ForeignKey(db_column='user_role', default=1, on_delete=django.db.models.deletion.CASCADE, to='geoapp.authorization_roles')),
            ],
            options={
                'db_table': 'user_roles_map',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='user_group_role_map',
            fields=[
                ('map_id', models.AutoField(db_index=True, primary_key=True, serialize=False)),
                ('user_group_id', models.ForeignKey(db_column='user_group_id', on_delete=django.db.models.deletion.CASCADE, to='geoapp.user_group')),
                ('user_group_role_id', models.ForeignKey(db_column='user_group_role_id', on_delete=django.db.models.deletion.CASCADE, to='geoapp.authorization_roles')),
            ],
            options={
                'db_table': 'user_group_role_map',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='user_group_map',
            fields=[
                ('user_group_map_id', models.AutoField(db_index=True, primary_key=True, serialize=False)),
                ('user_group_id', models.ForeignKey(db_column='user_group_id', on_delete=django.db.models.deletion.CASCADE, to='geoapp.user_group')),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_group_map',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='user_group_details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_group_description', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
            ],
        ),
        migrations.CreateModel(
            name='tasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('is_enabled', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='geoapp.task_types')),
            ],
            options={
                'db_table': 'tasks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emp_id', models.CharField(default='EmpID', max_length=10, verbose_name='employee id')),
                ('dept_name', models.TextField(default='ABMS', verbose_name='department name')),
                ('user_status', models.TextField(default='New', verbose_name='user status')),
                ('user_description', models.TextField(default='New user', verbose_name='user desciption')),
                ('otp', models.IntegerField(default='1234', verbose_name='otp')),
                ('login_attempt', models.IntegerField(default=0, verbose_name='login_attempt')),
                ('role_id', models.IntegerField(default=5, verbose_name='role id')),
                ('is_validated', models.BooleanField(default=False, verbose_name='is validated')),
                ('random_url', models.TextField(default='default', verbose_name='random url')),
                ('otp_sent_time', models.DateTimeField(default='2021-01-01 11:21:05', verbose_name='otp_sent_time')),
                ('url_valid_time', models.DateTimeField(default='2021-01-01 11:21:05', verbose_name='url_valid_time')),
                ('is_first_time_user', models.BooleanField(blank=True, db_column='IsFirstTimeUser', default=True, null=True)),
                ('created_on', models.DateTimeField(db_column='CreatedOn', default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(db_column='ModifiedOn', default=django.utils.timezone.now)),
                ('offset_time', models.IntegerField(blank=True, null=True)),
                ('is_workflow_engine_created', models.BooleanField(blank=True, db_column='IsWorkflowEngineCreated', default=False, null=True)),
                ('is_pyramid_user_created', models.BooleanField(blank=True, db_column='IsPyramidUserCreated', default=False, null=True)),
                ('workflow_default_service_user_created', models.BooleanField(blank=True, db_column='workflow_default_service_user_created', default=False, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='notes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, null=True)),
                ('added_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('is_enabled', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by_user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='geoapp.task_types')),
            ],
            options={
                'db_table': 'notes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='module_group_map',
            fields=[
                ('map_id', models.AutoField(db_column='map_id', db_index=True, primary_key=True, serialize=False)),
                ('module_group_id', models.ForeignKey(blank=True, db_column='module_group_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='geoapp.module_group')),
                ('module_id', models.ForeignKey(blank=True, db_column='module_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='geoapp.modules')),
            ],
            options={
                'db_table': 'module_group_map',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_id', models.TextField(blank=True, null=True)),
                ('file_path', models.TextField(blank=True, null=True)),
                ('added_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('is_enabled', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by_user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='geoapp.task_types')),
            ],
            options={
                'db_table': 'files',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='authorization_roles',
            name='resources_type',
            field=models.ForeignKey(db_column='resources_type', on_delete=django.db.models.deletion.CASCADE, to='geoapp.resources_type'),
        ),
    ]
